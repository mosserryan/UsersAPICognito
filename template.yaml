AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  photo-app-users-api-cognito

  Sample SAM Template for photo-app-users-api-cognito

# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Globals:
  Function:
    Timeout: 20
    Runtime: java11
    Architectures:
        - x86_64
    MemorySize: 512
    Environment: # More info about Env Vars: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#environment-object
      Variables:
        MY_COGNITO_POOL_APP_CLIENT_ID: AQICAHimVCAslFGs4s+yA3Gl3GfngLiHIPwrStF7BaqZp+03ZQH1gQD3AnRTm8tBpYGtvMjxAAAAeDB2BgkqhkiG9w0BBwagaTBnAgEAMGIGCSqGSIb3DQEHATAeBglghkgBZQMEAS4wEQQMy+kCJggRpxPaV1yKAgEQgDVnGHUrbhPKwWQ/cCUL7iRJs/R3BvPkpNX3aMY4NRm2mGkqkwLIwk76oY9lJutTWZHqMjLE1Q==
        MY_COGNITO_POOL_APP_CLIENT_SECRET: AQICAHimVCAslFGs4s+yA3Gl3GfngLiHIPwrStF7BaqZp+03ZQGyjzGIQK4+FSQXDjDnlGGeAAAAlTCBkgYJKoZIhvcNAQcGoIGEMIGBAgEAMHwGCSqGSIb3DQEHATAeBglghkgBZQMEAS4wEQQM44fRbIHT1dNtjqm0AgEQgE9TzCYMg/AEB+dgoIiTrtFHYz4YYe4CvhdDBwP1fjaEWPq7pOm8cpZJ1bZ86F3OHDiF+0lc9yCFNrhKWfzCMO9UeN2vSlKo3x5h+iaQx7RK
        MY_COGNITO_POOL_ID: AQICAHimVCAslFGs4s+yA3Gl3GfngLiHIPwrStF7BaqZp+03ZQFVLi0fXnkNWLZw2BHDXezyAAAAcjBwBgkqhkiG9w0BBwagYzBhAgEAMFwGCSqGSIb3DQEHATAeBglghkgBZQMEAS4wEQQMpKM4VSYrtRQWUqOxAgEQgC/M26S2CYd/gu5oHppZGKRYJSNf7FNHvaTnPZkIdVw/cCeLfqrvIMC2YoUA7gIagQ==
Resources:
  MyApi:
    Type: AWS::Serverless::Api
    Properties:
      StageName: Prod
      DefinitionBody:
        Fn::Transform:
          Name: AWS::Include
          Parameters:
            Location: open-api.yaml
  CreateUserHandlerFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      CodeUri: PhotoAppUsersAPICognito
      Handler: com.appsdeveloperblog.aws.lambda.CreateUserHandler::handleRequest
      Events:
        CreateUser:
          Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties:
            Path: /users
            Method: post
            RestApiId:
              Ref: MyApi
  ConfirmUserHandlerFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      CodeUri: PhotoAppUsersAPICognito
      Handler: com.appsdeveloperblog.aws.lambda.ConfirmUserHandler::handleRequest
      Events:
        ConfirmUser:
          Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties:
            Path: /confirm
            Method: post
            RestApiId:
              Ref: MyApi
  LoginUserHandlerFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      CodeUri: PhotoAppUsersAPICognito
      Handler: com.appsdeveloperblog.aws.lambda.LoginUserHandler::handleRequest
      Events:
        LoginUser:
          Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties:
            Path: /login
            Method: post
            RestApiId:
              Ref: MyApi
  AddUserToGroupHandlerFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      CodeUri: PhotoAppUsersAPICognito
      Handler: com.appsdeveloperblog.aws.lambda.AddUserToGroupHandler::handleRequest
      Policies:
        - Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Action:
                - 'cognito-idp:AdminAddUserToGroup'
              Resource: "arn:aws:cognito-idp:us-west-2:796162985282:userpool/us-west-2_9KaPB3BsU"
      Events:
        AddUserToGroup:
          Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties:
            Path: /users/{username}/add-to-group
            Method: post
            RestApiId:
              Ref: MyApi
  GetUserHandlerFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      CodeUri: PhotoAppUsersAPICognito
      Handler: com.appsdeveloperblog.aws.lambda.GetUserHandler::handleRequest
      Events:
        GetUser:
          Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties:
            Path: /users/me
            Method: get
            RestApiId:
              Ref: MyApi

Outputs:
  # ServerlessRestApi is an implicit API created out of Events key under Serverless::Function
  # Find out more about other implicit resources you can reference within SAM
  # https://github.com/awslabs/serverless-application-model/blob/master/docs/internals/generated_resources.rst#api
  CreateUserApi:
    Description: "API Gateway endpoint URL for Prod stage for CreateUserHandler Function"
    Value: !Sub "https://${MyApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/users"
  CreateUserHandlerFunction:
    Description: "CreateUserHandler Lambda Function ARN"
    Value: !GetAtt CreateUserHandlerFunction.Arn
  CreateUserHandlerFunctionIamRole:
    Description: "Implicit IAM Role created for CreateUserHandler"
    Value: !GetAtt CreateUserHandlerFunctionRole.Arn
